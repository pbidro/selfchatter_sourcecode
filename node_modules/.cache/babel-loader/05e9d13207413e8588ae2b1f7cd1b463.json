{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, nextTick, watch, provide, reactive, onMounted, withDirectives, h } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { More } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport Menu$1 from './utils/menu-bar.mjs';\nimport ElMenuCollapseTransition from './menu-collapse-transition.mjs';\nimport SubMenu from './sub-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { isString, isObject } from '@vue/shared';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport Resize from '../../../directives/resize/index.mjs';\nconst menuProps = buildProps({\n  mode: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    default: \"vertical\"\n  },\n  defaultActive: {\n    type: String,\n    default: \"\"\n  },\n  defaultOpeneds: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: [\"hover\", \"click\"],\n    default: \"hover\"\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst checkIndexPath = indexPath => Array.isArray(indexPath) && indexPath.every(path => isString(path));\n\nconst menuEmits = {\n  close: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  open: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  select: (index, indexPath, item, routerResult) => isString(index) && checkIndexPath(indexPath) && isObject(item) && (routerResult === void 0 || routerResult instanceof Promise)\n};\nvar Menu = defineComponent({\n  name: \"ElMenu\",\n  props: menuProps,\n  emits: menuEmits,\n\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    const instance = getCurrentInstance();\n    const router = instance.appContext.config.globalProperties.$router;\n    const menu = ref();\n    const nsMenu = useNamespace(\"menu\");\n    const nsSubMenu = useNamespace(\"sub-menu\");\n    const openedMenus = ref(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);\n    const activeIndex = ref(props.defaultActive);\n    const items = ref({});\n    const subMenus = ref({});\n    const isMenuPopup = computed(() => {\n      return props.mode === \"horizontal\" || props.mode === \"vertical\" && props.collapse;\n    });\n\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value];\n      if (!activeItem || props.mode === \"horizontal\" || props.collapse) return;\n      const indexPath = activeItem.indexPath;\n      indexPath.forEach(index => {\n        const subMenu = subMenus.value[index];\n        subMenu && openMenu(index, subMenu.indexPath);\n      });\n    };\n\n    const openMenu = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return;\n\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter(index2 => indexPath.includes(index2));\n      }\n\n      openedMenus.value.push(index);\n      emit(\"open\", index, indexPath);\n    };\n\n    const closeMenu = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index);\n\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1);\n      }\n\n      emit(\"close\", index, indexPath);\n    };\n\n    const handleSubMenuClick = ({\n      index,\n      indexPath\n    }) => {\n      const isOpened = openedMenus.value.includes(index);\n\n      if (isOpened) {\n        closeMenu(index, indexPath);\n      } else {\n        openMenu(index, indexPath);\n      }\n    };\n\n    const handleMenuItemClick = menuItem => {\n      if (props.mode === \"horizontal\" || props.collapse) {\n        openedMenus.value = [];\n      }\n\n      const {\n        index,\n        indexPath\n      } = menuItem;\n      if (index === void 0 || indexPath === void 0) return;\n\n      if (props.router && router) {\n        const route = menuItem.route || index;\n        const routerResult = router.push(route).then(res => {\n          if (!res) activeIndex.value = index;\n          return res;\n        });\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath,\n          route\n        }, routerResult);\n      } else {\n        activeIndex.value = index;\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath\n        });\n      }\n    };\n\n    const updateActiveIndex = val => {\n      const itemsInData = items.value;\n      const item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];\n\n      if (item) {\n        activeIndex.value = item.index;\n        initMenu();\n      } else {\n        activeIndex.value = val;\n      }\n    };\n\n    const handleResize = () => {\n      nextTick(() => instance.proxy.$forceUpdate());\n    };\n\n    watch(() => props.defaultActive, currentActive => {\n      if (!items.value[currentActive]) {\n        activeIndex.value = \"\";\n      }\n\n      updateActiveIndex(currentActive);\n    });\n    watch(items.value, () => initMenu());\n    watch(() => props.collapse, value => {\n      if (value) openedMenus.value = [];\n    });\n    {\n      const addSubMenu = item => {\n        subMenus.value[item.index] = item;\n      };\n\n      const removeSubMenu = item => {\n        delete subMenus.value[item.index];\n      };\n\n      const addMenuItem = item => {\n        items.value[item.index] = item;\n      };\n\n      const removeMenuItem = item => {\n        delete items.value[item.index];\n      };\n\n      provide(\"rootMenu\", reactive({\n        props,\n        openedMenus,\n        items,\n        subMenus,\n        activeIndex,\n        isMenuPopup,\n        addMenuItem,\n        removeMenuItem,\n        addSubMenu,\n        removeSubMenu,\n        openMenu,\n        closeMenu,\n        handleMenuItemClick,\n        handleSubMenuClick\n      }));\n      provide(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        mouseInChild: ref(false)\n      });\n    }\n    onMounted(() => {\n      initMenu();\n\n      if (props.mode === \"horizontal\") {\n        new Menu$1(instance.vnode.el, nsMenu.namespace.value);\n      }\n    });\n    {\n      const open = index => {\n        const {\n          indexPath\n        } = subMenus.value[index];\n        indexPath.forEach(i => openMenu(i, indexPath));\n      };\n\n      expose({\n        open,\n        close: closeMenu,\n        handleResize\n      });\n    }\n\n    const flattedChildren = children => {\n      const vnodes = Array.isArray(children) ? children : [children];\n      const result = [];\n      vnodes.forEach(child => {\n        if (Array.isArray(child.children)) {\n          result.push(...flattedChildren(child.children));\n        } else {\n          result.push(child);\n        }\n      });\n      return result;\n    };\n\n    const useVNodeResize = vnode => props.mode === \"horizontal\" ? withDirectives(vnode, [[Resize, handleResize]]) : vnode;\n\n    return () => {\n      var _a, _b, _c, _d;\n\n      let slot = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) != null ? _b : [];\n      const vShowMore = [];\n\n      if (props.mode === \"horizontal\" && menu.value) {\n        const items2 = Array.from((_d = (_c = menu.value) == null ? void 0 : _c.childNodes) != null ? _d : []).filter(item => item.nodeName !== \"#text\" || item.nodeValue);\n        const originalSlot = flattedChildren(slot);\n        const moreItemWidth = 64;\n        const paddingLeft = Number.parseInt(getComputedStyle(menu.value).paddingLeft, 10);\n        const paddingRight = Number.parseInt(getComputedStyle(menu.value).paddingRight, 10);\n        const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;\n        let calcWidth = 0;\n        let sliceIndex = 0;\n        items2.forEach((item, index) => {\n          calcWidth += item.offsetWidth || 0;\n\n          if (calcWidth <= menuWidth - moreItemWidth) {\n            sliceIndex = index + 1;\n          }\n        });\n        const slotDefault = originalSlot.slice(0, sliceIndex);\n        const slotMore = originalSlot.slice(sliceIndex);\n\n        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {\n          slot = slotDefault;\n          vShowMore.push(h(SubMenu, {\n            index: \"sub-menu-more\",\n            class: nsSubMenu.e(\"hide-arrow\")\n          }, {\n            title: () => h(ElIcon, {\n              class: nsSubMenu.e(\"icon-more\")\n            }, {\n              default: () => h(More)\n            }),\n            default: () => slotMore\n          }));\n        }\n      }\n\n      const ulStyle = useMenuCssVar(props);\n\n      const resizeMenu = vNode => props.ellipsis ? useVNodeResize(vNode) : vNode;\n\n      const vMenu = resizeMenu(h(\"ul\", {\n        key: String(props.collapse),\n        role: \"menubar\",\n        ref: menu,\n        style: ulStyle.value,\n        class: {\n          [nsMenu.b()]: true,\n          [nsMenu.m(\"horizontal\")]: props.mode === \"horizontal\",\n          [nsMenu.m(\"collapse\")]: props.collapse\n        }\n      }, [...slot, ...vShowMore]));\n\n      if (props.collapseTransition && props.mode === \"vertical\") {\n        return h(ElMenuCollapseTransition, () => vMenu);\n      }\n\n      return vMenu;\n    };\n  }\n\n});\nexport { Menu as default, menuEmits, menuProps };","map":{"version":3,"mappings":"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","names":["menuProps","buildProps","mode","type","String","values","default","defaultActive","defaultOpeneds","definePropType","Array","mutable","uniqueOpened","Boolean","router","menuTrigger","collapse","backgroundColor","textColor","activeTextColor","collapseTransition","ellipsis","checkIndexPath","indexPath","isArray","every","path","isString","menuEmits","close","index","open","select","item","routerResult","isObject","Promise","defineComponent","name","props","emits","setup","emit","slots","expose","instance","getCurrentInstance","appContext","config","globalProperties","$router","menu","ref","nsMenu","useNamespace","nsSubMenu","openedMenus","slice","activeIndex","items","subMenus","isMenuPopup","computed","initMenu","activeItem","value","forEach","subMenu","openMenu","includes","filter","index2","push","closeMenu","i","indexOf","splice","handleSubMenuClick","isOpened","handleMenuItemClick","menuItem","route","then","res","updateActiveIndex","val","itemsInData","handleResize","nextTick","proxy","$forceUpdate","watch","currentActive","addSubMenu","removeSubMenu","addMenuItem","removeMenuItem","provide","reactive","uid","mouseInChild","onMounted","Menubar","vnode","el","namespace","flattedChildren","children","vnodes","result","child","useVNodeResize","withDirectives","Resize","_a","_b","_c","_d","slot","call","vShowMore","items2","from","childNodes","nodeName","nodeValue","originalSlot","moreItemWidth","paddingLeft","Number","parseInt","getComputedStyle","paddingRight","menuWidth","clientWidth","calcWidth","sliceIndex","offsetWidth","slotDefault","slotMore","length","h","ElSubMenu","class","e","title","ElIcon","More","ulStyle","useMenuCssVar","resizeMenu","vNode","vMenu","key","role","style","b","m","ElMenuCollapseTransition"],"sources":["../../../../../../packages/components/menu/src/menu.ts"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n  withDirectives,\n} from 'vue'\nimport { Resize } from '@element-plus/directives'\nimport ElIcon from '@element-plus/components/icon'\nimport { More } from '@element-plus/icons-vue'\nimport {\n  buildProps,\n  definePropType,\n  isObject,\n  isString,\n  mutable,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Menubar from './utils/menu-bar'\nimport ElMenuCollapseTransition from './menu-collapse-transition.vue'\nimport ElSubMenu from './sub-menu'\nimport { useMenuCssVar } from './use-menu-css-var'\n\nimport type { MenuItemClicked, MenuProvider, SubMenuProvider } from './types'\nimport type { NavigationFailure, Router } from 'vue-router'\nimport type { ExtractPropTypes, VNode, VNodeNormalizedChildren } from 'vue'\n\nexport const menuProps = buildProps({\n  mode: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'vertical',\n  },\n  defaultActive: {\n    type: String,\n    default: '',\n  },\n  defaultOpeneds: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: ['hover', 'click'],\n    default: 'hover',\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true,\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type MenuProps = ExtractPropTypes<typeof menuProps>\n\nconst checkIndexPath = (indexPath: unknown): indexPath is string[] =>\n  Array.isArray(indexPath) && indexPath.every((path) => isString(path))\n\nexport const menuEmits = {\n  close: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  open: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  select: (\n    index: string,\n    indexPath: string[],\n    item: MenuItemClicked,\n    routerResult?: Promise<void | NavigationFailure>\n  ) =>\n    isString(index) &&\n    checkIndexPath(indexPath) &&\n    isObject(item) &&\n    (routerResult === undefined || routerResult instanceof Promise),\n}\nexport type MenuEmits = typeof menuEmits\n\nexport default defineComponent({\n  name: 'ElMenu',\n\n  props: menuProps,\n  emits: menuEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const instance = getCurrentInstance()!\n    const router = instance.appContext.config.globalProperties.$router as Router\n    const menu = ref<HTMLUListElement>()\n    const nsMenu = useNamespace('menu')\n    const nsSubMenu = useNamespace('sub-menu')\n\n    // data\n    const openedMenus = ref<MenuProvider['openedMenus']>(\n      props.defaultOpeneds && !props.collapse\n        ? props.defaultOpeneds.slice(0)\n        : []\n    )\n    const activeIndex = ref<MenuProvider['activeIndex']>(props.defaultActive)\n    const items = ref<MenuProvider['items']>({})\n    const subMenus = ref<MenuProvider['subMenus']>({})\n\n    // computed\n    const isMenuPopup = computed<MenuProvider['isMenuPopup']>(() => {\n      return (\n        props.mode === 'horizontal' ||\n        (props.mode === 'vertical' && props.collapse)\n      )\n    })\n\n    // methods\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value]\n      if (!activeItem || props.mode === 'horizontal' || props.collapse) return\n\n      const indexPath = activeItem.indexPath\n\n      // 展开该菜单项的路径上所有子菜单\n      // expand all subMenus of the menu item\n      indexPath.forEach((index) => {\n        const subMenu = subMenus.value[index]\n        subMenu && openMenu(index, subMenu.indexPath)\n      })\n    }\n\n    const openMenu: MenuProvider['openMenu'] = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return\n      // 将不在该菜单路径下的其余菜单收起\n      // collapse all menu that are not under current menu item\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter((index: string) =>\n          indexPath.includes(index)\n        )\n      }\n      openedMenus.value.push(index)\n      emit('open', index, indexPath)\n    }\n\n    const closeMenu: MenuProvider['closeMenu'] = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index)\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1)\n      }\n      emit('close', index, indexPath)\n    }\n\n    const handleSubMenuClick: MenuProvider['handleSubMenuClick'] = ({\n      index,\n      indexPath,\n    }) => {\n      const isOpened = openedMenus.value.includes(index)\n\n      if (isOpened) {\n        closeMenu(index, indexPath)\n      } else {\n        openMenu(index, indexPath)\n      }\n    }\n\n    const handleMenuItemClick: MenuProvider['handleMenuItemClick'] = (\n      menuItem\n    ) => {\n      if (props.mode === 'horizontal' || props.collapse) {\n        openedMenus.value = []\n      }\n\n      const { index, indexPath } = menuItem\n      if (index === undefined || indexPath === undefined) return\n\n      if (props.router && router) {\n        const route = menuItem.route || index\n        const routerResult = router.push(route).then((res) => {\n          if (!res) activeIndex.value = index\n          return res\n        })\n        emit(\n          'select',\n          index,\n          indexPath,\n          { index, indexPath, route },\n          routerResult\n        )\n      } else {\n        activeIndex.value = index\n        emit('select', index, indexPath, { index, indexPath })\n      }\n    }\n\n    const updateActiveIndex = (val: string) => {\n      const itemsInData = items.value\n      const item =\n        itemsInData[val] ||\n        (activeIndex.value && itemsInData[activeIndex.value]) ||\n        itemsInData[props.defaultActive]\n\n      if (item) {\n        activeIndex.value = item.index\n        initMenu()\n      } else {\n        activeIndex.value = val\n      }\n    }\n    const handleResize = () => {\n      nextTick(() => instance.proxy!.$forceUpdate())\n    }\n\n    watch(\n      () => props.defaultActive,\n      (currentActive) => {\n        if (!items.value[currentActive]) {\n          activeIndex.value = ''\n        }\n        updateActiveIndex(currentActive)\n      }\n    )\n\n    watch(items.value, () => initMenu())\n\n    watch(\n      () => props.collapse,\n      (value) => {\n        if (value) openedMenus.value = []\n      }\n    )\n\n    // provide\n    {\n      const addSubMenu: MenuProvider['addSubMenu'] = (item) => {\n        subMenus.value[item.index] = item\n      }\n\n      const removeSubMenu: MenuProvider['removeSubMenu'] = (item) => {\n        delete subMenus.value[item.index]\n      }\n\n      const addMenuItem: MenuProvider['addMenuItem'] = (item) => {\n        items.value[item.index] = item\n      }\n\n      const removeMenuItem: MenuProvider['removeMenuItem'] = (item) => {\n        delete items.value[item.index]\n      }\n      provide<MenuProvider>(\n        'rootMenu',\n        reactive({\n          props,\n          openedMenus,\n          items,\n          subMenus,\n          activeIndex,\n          isMenuPopup,\n\n          addMenuItem,\n          removeMenuItem,\n          addSubMenu,\n          removeSubMenu,\n          openMenu,\n          closeMenu,\n          handleMenuItemClick,\n          handleSubMenuClick,\n        })\n      )\n      provide<SubMenuProvider>(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        mouseInChild: ref(false),\n      })\n    }\n\n    // lifecycle\n    onMounted(() => {\n      initMenu()\n      if (props.mode === 'horizontal') {\n        new Menubar(instance.vnode.el!, nsMenu.namespace.value)\n      }\n    })\n\n    {\n      const open = (index: string) => {\n        const { indexPath } = subMenus.value[index]\n        indexPath.forEach((i) => openMenu(i, indexPath))\n      }\n      expose({\n        open,\n        close: closeMenu,\n        handleResize,\n      })\n    }\n\n    const flattedChildren = (children: VNodeNormalizedChildren) => {\n      const vnodes = Array.isArray(children) ? children : [children]\n      const result: any[] = []\n      vnodes.forEach((child: any) => {\n        if (Array.isArray(child.children)) {\n          result.push(...flattedChildren(child.children))\n        } else {\n          result.push(child)\n        }\n      })\n      return result\n    }\n\n    const useVNodeResize = (vnode: VNode) =>\n      props.mode === 'horizontal'\n        ? withDirectives(vnode, [[Resize, handleResize]])\n        : vnode\n    return () => {\n      let slot = slots.default?.() ?? []\n      const vShowMore: VNode[] = []\n\n      if (props.mode === 'horizontal' && menu.value) {\n        const items = Array.from(menu.value?.childNodes ?? []).filter(\n          (item) => item.nodeName !== '#text' || item.nodeValue\n        ) as HTMLElement[]\n        const originalSlot = flattedChildren(slot)\n        const moreItemWidth = 64\n        const paddingLeft = Number.parseInt(\n          getComputedStyle(menu.value).paddingLeft,\n          10\n        )\n        const paddingRight = Number.parseInt(\n          getComputedStyle(menu.value).paddingRight,\n          10\n        )\n        const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight\n        let calcWidth = 0\n        let sliceIndex = 0\n        items.forEach((item, index) => {\n          calcWidth += item.offsetWidth || 0\n          if (calcWidth <= menuWidth - moreItemWidth) {\n            sliceIndex = index + 1\n          }\n        })\n        const slotDefault = originalSlot.slice(0, sliceIndex)\n        const slotMore = originalSlot.slice(sliceIndex)\n        if (slotMore?.length && props.ellipsis) {\n          slot = slotDefault\n          vShowMore.push(\n            h(\n              ElSubMenu,\n              {\n                index: 'sub-menu-more',\n                class: nsSubMenu.e('hide-arrow'),\n              },\n              {\n                title: () =>\n                  h(\n                    ElIcon,\n                    {\n                      class: nsSubMenu.e('icon-more'),\n                    },\n                    { default: () => h(More) }\n                  ),\n                default: () => slotMore,\n              }\n            )\n          )\n        }\n      }\n\n      const ulStyle = useMenuCssVar(props)\n\n      const resizeMenu = (vNode: VNode) =>\n        props.ellipsis ? useVNodeResize(vNode) : vNode\n\n      const vMenu = resizeMenu(\n        h(\n          'ul',\n          {\n            key: String(props.collapse),\n            role: 'menubar',\n            ref: menu,\n            style: ulStyle.value,\n            class: {\n              [nsMenu.b()]: true,\n              [nsMenu.m('horizontal')]: props.mode === 'horizontal',\n              [nsMenu.m('collapse')]: props.collapse,\n            },\n          },\n          [...slot, ...vShowMore]\n        )\n      )\n\n      if (props.collapseTransition && props.mode === 'vertical') {\n        return h(ElMenuCollapseTransition, () => vMenu)\n      }\n\n      return vMenu\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}