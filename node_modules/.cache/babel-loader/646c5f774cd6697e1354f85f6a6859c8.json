{"ast":null,"code":"import { nextTick } from 'vue';\nimport { isString } from '@vue/shared';\nimport { isClient } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { createLoadingComponent } from './loading.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { getStyle, addClass, removeClass } from '../../../utils/dom/style.mjs';\nlet fullscreenInstance = void 0;\n\nconst Loading = function (options = {}) {\n  if (!isClient) return void 0;\n  const resolved = resolveOptions(options);\n\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance;\n  }\n\n  const instance = createLoadingComponent({ ...resolved,\n    closed: () => {\n      var _a;\n\n      (_a = resolved.closed) == null ? void 0 : _a.call(resolved);\n      if (resolved.fullscreen) fullscreenInstance = void 0;\n    }\n  });\n  addStyle(resolved, resolved.parent, instance);\n  addClassList(resolved, resolved.parent, instance);\n\n  resolved.parent.vLoadingAddClassList = () => addClassList(resolved, resolved.parent, instance);\n\n  let loadingNumber = resolved.parent.getAttribute(\"loading-number\");\n\n  if (!loadingNumber) {\n    loadingNumber = \"1\";\n  } else {\n    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`;\n  }\n\n  resolved.parent.setAttribute(\"loading-number\", loadingNumber);\n  resolved.parent.appendChild(instance.$el);\n  nextTick(() => instance.visible.value = resolved.visible);\n\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance;\n  }\n\n  return instance;\n};\n\nconst resolveOptions = options => {\n  var _a, _b, _c, _d;\n\n  let target;\n\n  if (isString(options.target)) {\n    target = (_a = document.querySelector(options.target)) != null ? _a : document.body;\n  } else {\n    target = options.target || document.body;\n  }\n\n  return {\n    parent: target === document.body || options.body ? document.body : target,\n    background: options.background || \"\",\n    svg: options.svg || \"\",\n    svgViewBox: options.svgViewBox || \"\",\n    spinner: options.spinner || false,\n    text: options.text || \"\",\n    fullscreen: target === document.body && ((_b = options.fullscreen) != null ? _b : true),\n    lock: (_c = options.lock) != null ? _c : false,\n    customClass: options.customClass || \"\",\n    visible: (_d = options.visible) != null ? _d : true,\n    target\n  };\n};\n\nconst addStyle = async (options, parent, instance) => {\n  const {\n    nextZIndex\n  } = useZIndex();\n  const maskStyle = {};\n\n  if (options.fullscreen) {\n    instance.originalPosition.value = getStyle(document.body, \"position\");\n    instance.originalOverflow.value = getStyle(document.body, \"overflow\");\n    maskStyle.zIndex = nextZIndex();\n  } else if (options.parent === document.body) {\n    instance.originalPosition.value = getStyle(document.body, \"position\");\n    await nextTick();\n\n    for (const property of [\"top\", \"left\"]) {\n      const scroll = property === \"top\" ? \"scrollTop\" : \"scrollLeft\";\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] - Number.parseInt(getStyle(document.body, `margin-${property}`), 10)}px`;\n    }\n\n    for (const property of [\"height\", \"width\"]) {\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property]}px`;\n    }\n  } else {\n    instance.originalPosition.value = getStyle(parent, \"position\");\n  }\n\n  for (const [key, value] of Object.entries(maskStyle)) {\n    instance.$el.style[key] = value;\n  }\n};\n\nconst addClassList = (options, parent, instance) => {\n  if (instance.originalPosition.value !== \"absolute\" && instance.originalPosition.value !== \"fixed\") {\n    addClass(parent, \"el-loading-parent--relative\");\n  } else {\n    removeClass(parent, \"el-loading-parent--relative\");\n  }\n\n  if (options.fullscreen && options.lock) {\n    addClass(parent, \"el-loading-parent--hidden\");\n  } else {\n    removeClass(parent, \"el-loading-parent--hidden\");\n  }\n};\n\nexport { Loading };","map":{"version":3,"mappings":"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","names":["fullscreenInstance","Loading","options","isClient","resolved","resolveOptions","fullscreen","instance","createLoadingComponent","closed","_a","call","addStyle","parent","addClassList","vLoadingAddClassList","loadingNumber","getAttribute","Number","parseInt","setAttribute","appendChild","$el","nextTick","visible","value","_b","_c","_d","target","isString","document","querySelector","body","background","svg","svgViewBox","spinner","text","lock","customClass","nextZIndex","useZIndex","maskStyle","originalPosition","getStyle","originalOverflow","zIndex","property","scroll","getBoundingClientRect","documentElement","key","Object","entries","style","addClass","removeClass"],"sources":["../../../../../../packages/components/loading/src/service.ts"],"sourcesContent":["import { nextTick } from 'vue'\nimport { isString } from '@vue/shared'\nimport { isClient } from '@vueuse/core'\nimport { addClass, getStyle, removeClass } from '@element-plus/utils'\nimport { useZIndex } from '@element-plus/hooks'\nimport { createLoadingComponent } from './loading'\nimport type { LoadingInstance } from './loading'\nimport type { LoadingOptionsResolved } from '..'\nimport type { LoadingOptions } from './types'\nimport type { CSSProperties } from 'vue'\n\nlet fullscreenInstance: LoadingInstance | undefined = undefined\n\nexport const Loading = function (\n  options: LoadingOptions = {}\n): LoadingInstance {\n  if (!isClient) return undefined as any\n\n  const resolved = resolveOptions(options)\n\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance\n  }\n\n  const instance = createLoadingComponent({\n    ...resolved,\n    closed: () => {\n      resolved.closed?.()\n      if (resolved.fullscreen) fullscreenInstance = undefined\n    },\n  })\n\n  addStyle(resolved, resolved.parent, instance)\n  addClassList(resolved, resolved.parent, instance)\n\n  resolved.parent.vLoadingAddClassList = () =>\n    addClassList(resolved, resolved.parent, instance)\n\n  /**\n   * add loading-number to parent.\n   * because if a fullscreen loading is triggered when somewhere\n   * a v-loading.body was triggered before and it's parent is\n   * document.body which with a margin , the fullscreen loading's\n   * destroySelf function will remove 'el-loading-parent--relative',\n   * and then the position of v-loading.body will be error.\n   */\n  let loadingNumber: string | null =\n    resolved.parent.getAttribute('loading-number')\n  if (!loadingNumber) {\n    loadingNumber = '1'\n  } else {\n    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`\n  }\n  resolved.parent.setAttribute('loading-number', loadingNumber)\n\n  resolved.parent.appendChild(instance.$el)\n\n  // after instance render, then modify visible to trigger transition\n  nextTick(() => (instance.visible.value = resolved.visible))\n\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance\n  }\n  return instance\n}\n\nconst resolveOptions = (options: LoadingOptions): LoadingOptionsResolved => {\n  let target: HTMLElement\n  if (isString(options.target)) {\n    target =\n      document.querySelector<HTMLElement>(options.target) ?? document.body\n  } else {\n    target = options.target || document.body\n  }\n  return {\n    parent: target === document.body || options.body ? document.body : target,\n    background: options.background || '',\n    svg: options.svg || '',\n    svgViewBox: options.svgViewBox || '',\n    spinner: options.spinner || false,\n    text: options.text || '',\n    fullscreen: target === document.body && (options.fullscreen ?? true),\n    lock: options.lock ?? false,\n    customClass: options.customClass || '',\n    visible: options.visible ?? true,\n    target,\n  }\n}\n\nconst addStyle = async (\n  options: LoadingOptionsResolved,\n  parent: HTMLElement,\n  instance: LoadingInstance\n) => {\n  const { nextZIndex } = useZIndex()\n\n  const maskStyle: CSSProperties = {}\n  if (options.fullscreen) {\n    instance.originalPosition.value = getStyle(document.body, 'position')\n    instance.originalOverflow.value = getStyle(document.body, 'overflow')\n    maskStyle.zIndex = nextZIndex()\n  } else if (options.parent === document.body) {\n    instance.originalPosition.value = getStyle(document.body, 'position')\n    /**\n     * await dom render when visible is true in init,\n     * because some component's height maybe 0.\n     * e.g. el-table.\n     */\n    await nextTick()\n    for (const property of ['top', 'left']) {\n      const scroll = property === 'top' ? 'scrollTop' : 'scrollLeft'\n      maskStyle[property] = `${\n        (options.target as HTMLElement).getBoundingClientRect()[property] +\n        document.body[scroll] +\n        document.documentElement[scroll] -\n        Number.parseInt(getStyle(document.body, `margin-${property}`), 10)\n      }px`\n    }\n    for (const property of ['height', 'width']) {\n      maskStyle[property] = `${\n        (options.target as HTMLElement).getBoundingClientRect()[property]\n      }px`\n    }\n  } else {\n    instance.originalPosition.value = getStyle(parent, 'position')\n  }\n  for (const [key, value] of Object.entries(maskStyle)) {\n    instance.$el.style[key] = value\n  }\n}\n\nconst addClassList = (\n  options: LoadingOptions,\n  parent: HTMLElement,\n  instance: LoadingInstance\n) => {\n  if (\n    instance.originalPosition.value !== 'absolute' &&\n    instance.originalPosition.value !== 'fixed'\n  ) {\n    addClass(parent, 'el-loading-parent--relative')\n  } else {\n    removeClass(parent, 'el-loading-parent--relative')\n  }\n  if (options.fullscreen && options.lock) {\n    addClass(parent, 'el-loading-parent--hidden')\n  } else {\n    removeClass(parent, 'el-loading-parent--hidden')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}