{"ast":null,"code":"import { createStore } from 'vuex';\nimport { getFirestore, collection, onSnapshot, query, orderBy, addDoc, deleteDoc, doc, setDoc } from 'firebase/firestore';\nexport default createStore({\n  state: {\n    myFirestore: null,\n    mensajes: null\n  },\n  getters: {},\n  mutations: {\n    instanceFirestore(state, fs) {\n      state.myFirestore = fs;\n    },\n\n    getMessages(state, mesages) {\n      state.mensajes = mesages;\n    }\n\n  },\n  actions: {\n    async instanceFirestore({\n      commit\n    }, fs) {\n      commit(\"instanceFirestore\", fs());\n    },\n\n    async getMessages({\n      commit\n    }) {\n      if (this.state.myFirestore) {\n        const db = getFirestore();\n        const q = query(collection(db, \"mensajes\"), orderBy(\"date\"));\n        onSnapshot(q, querySnapshot => {\n          const mensajes = [];\n          this.mensajes = [];\n          querySnapshot.forEach(doc => {\n            mensajes.push({\n              id: doc.id,\n              data: doc.data()\n            });\n          });\n          commit('getMessages', mensajes);\n        });\n      }\n    },\n\n    async addMessage(commit, objeto) {\n      if (objeto != \"\") {\n        console.log(objeto);\n        const db = getFirestore();\n        await addDoc(collection(db, \"mensajes\"), objeto);\n        commit;\n      }\n    },\n\n    async delMessage(commit, objeto) {\n      if (objeto != \"\") {\n        console.log(objeto);\n        const db = getFirestore();\n        await deleteDoc(doc(db, \"mensajes\", objeto));\n        commit;\n      }\n    },\n\n    async editMessage(commit, objeto) {\n      if (objeto != \"\") {\n        console.log(objeto);\n        const db = getFirestore();\n        await setDoc(doc(db, \"mensajes\", objeto[0]), objeto[1]);\n        commit;\n      }\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","getFirestore","collection","onSnapshot","query","orderBy","addDoc","deleteDoc","doc","setDoc","state","myFirestore","mensajes","getters","mutations","instanceFirestore","fs","getMessages","mesages","actions","commit","db","q","querySnapshot","forEach","push","id","data","addMessage","objeto","console","log","delMessage","editMessage","modules"],"sources":["/Users/pibustamante/Documents/repositorios/vue-avanzado/selfchatter_sourcecode/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  query,\n  orderBy,\n  addDoc,\n  deleteDoc,\n  doc,\n  setDoc,\n} from 'firebase/firestore'\n\nexport default createStore({\n  state: {\n    myFirestore: null,\n    mensajes: null,\n  },\n  getters: {\n\n  },\n  mutations: {\n    instanceFirestore(state, fs) {\n      state.myFirestore = fs\n    },\n    getMessages(state, mesages) {\n      state.mensajes = mesages\n    }\n  },\n  actions: {\n    async instanceFirestore({ commit }, fs) {\n      commit(\"instanceFirestore\", fs())\n    },\n    async getMessages({ commit }) {\n      if (this.state.myFirestore) {\n        const db = getFirestore();\n        const q = query(collection(db, \"mensajes\"), orderBy(\"date\"));\n        onSnapshot(q, (querySnapshot) => {\n          const mensajes = [];\n          this.mensajes = [];\n          querySnapshot.forEach((doc) => {\n            mensajes.push({ id: doc.id, data: doc.data() });\n          });\n          commit('getMessages', mensajes)\n        });\n      }\n    },\n    async addMessage(commit,objeto) {\n      if (objeto != \"\") {\n        console.log(objeto)\n        const db = getFirestore();\n        await addDoc(collection(db, \"mensajes\"), objeto);\n        commit\n      }\n    },\n    async delMessage(commit,objeto) {\n      if (objeto != \"\") {\n        console.log(objeto)\n        const db = getFirestore();\n        await deleteDoc(doc(db, \"mensajes\", objeto));\n        commit\n      }\n    },\n    async editMessage(commit,objeto) {\n      if (objeto != \"\") {\n        console.log(objeto)\n        const db = getFirestore();\n        await setDoc(doc(db, \"mensajes\", objeto[0]), objeto[1]);\n        commit\n      }\n    },\n\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,GARF,EASEC,MATF,QAUO,oBAVP;AAYA,eAAeT,WAAW,CAAC;EACzBU,KAAK,EAAE;IACLC,WAAW,EAAE,IADR;IAELC,QAAQ,EAAE;EAFL,CADkB;EAKzBC,OAAO,EAAE,EALgB;EAQzBC,SAAS,EAAE;IACTC,iBAAiB,CAACL,KAAD,EAAQM,EAAR,EAAY;MAC3BN,KAAK,CAACC,WAAN,GAAoBK,EAApB;IACD,CAHQ;;IAITC,WAAW,CAACP,KAAD,EAAQQ,OAAR,EAAiB;MAC1BR,KAAK,CAACE,QAAN,GAAiBM,OAAjB;IACD;;EANQ,CARc;EAgBzBC,OAAO,EAAE;IACP,MAAMJ,iBAAN,CAAwB;MAAEK;IAAF,CAAxB,EAAoCJ,EAApC,EAAwC;MACtCI,MAAM,CAAC,mBAAD,EAAsBJ,EAAE,EAAxB,CAAN;IACD,CAHM;;IAIP,MAAMC,WAAN,CAAkB;MAAEG;IAAF,CAAlB,EAA8B;MAC5B,IAAI,KAAKV,KAAL,CAAWC,WAAf,EAA4B;QAC1B,MAAMU,EAAE,GAAGpB,YAAY,EAAvB;QACA,MAAMqB,CAAC,GAAGlB,KAAK,CAACF,UAAU,CAACmB,EAAD,EAAK,UAAL,CAAX,EAA6BhB,OAAO,CAAC,MAAD,CAApC,CAAf;QACAF,UAAU,CAACmB,CAAD,EAAKC,aAAD,IAAmB;UAC/B,MAAMX,QAAQ,GAAG,EAAjB;UACA,KAAKA,QAAL,GAAgB,EAAhB;UACAW,aAAa,CAACC,OAAd,CAAuBhB,GAAD,IAAS;YAC7BI,QAAQ,CAACa,IAAT,CAAc;cAAEC,EAAE,EAAElB,GAAG,CAACkB,EAAV;cAAcC,IAAI,EAAEnB,GAAG,CAACmB,IAAJ;YAApB,CAAd;UACD,CAFD;UAGAP,MAAM,CAAC,aAAD,EAAgBR,QAAhB,CAAN;QACD,CAPS,CAAV;MAQD;IACF,CAjBM;;IAkBP,MAAMgB,UAAN,CAAiBR,MAAjB,EAAwBS,MAAxB,EAAgC;MAC9B,IAAIA,MAAM,IAAI,EAAd,EAAkB;QAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;QACA,MAAMR,EAAE,GAAGpB,YAAY,EAAvB;QACA,MAAMK,MAAM,CAACJ,UAAU,CAACmB,EAAD,EAAK,UAAL,CAAX,EAA6BQ,MAA7B,CAAZ;QACAT,MAAM;MACP;IACF,CAzBM;;IA0BP,MAAMY,UAAN,CAAiBZ,MAAjB,EAAwBS,MAAxB,EAAgC;MAC9B,IAAIA,MAAM,IAAI,EAAd,EAAkB;QAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;QACA,MAAMR,EAAE,GAAGpB,YAAY,EAAvB;QACA,MAAMM,SAAS,CAACC,GAAG,CAACa,EAAD,EAAK,UAAL,EAAiBQ,MAAjB,CAAJ,CAAf;QACAT,MAAM;MACP;IACF,CAjCM;;IAkCP,MAAMa,WAAN,CAAkBb,MAAlB,EAAyBS,MAAzB,EAAiC;MAC/B,IAAIA,MAAM,IAAI,EAAd,EAAkB;QAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;QACA,MAAMR,EAAE,GAAGpB,YAAY,EAAvB;QACA,MAAMQ,MAAM,CAACD,GAAG,CAACa,EAAD,EAAK,UAAL,EAAiBQ,MAAM,CAAC,CAAD,CAAvB,CAAJ,EAAiCA,MAAM,CAAC,CAAD,CAAvC,CAAZ;QACAT,MAAM;MACP;IACF;;EAzCM,CAhBgB;EA4DzBc,OAAO,EAAE;AA5DgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}