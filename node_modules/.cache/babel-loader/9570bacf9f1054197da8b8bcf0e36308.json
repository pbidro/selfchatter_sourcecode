{"ast":null,"code":"import { createStore } from 'vuex';\nimport { onSnapshot, query, collection } from 'firebase/firestore';\nexport default createStore({\n  state: {\n    myFirestore: null,\n    mensajes: null\n  },\n  getters: {},\n  mutations: {\n    instanceFirestore(state, fs) {\n      state.myFirestore = fs;\n    }\n\n  },\n  actions: {\n    async instanceFirestore({\n      commit\n    }, fs) {\n      commit(\"instanceFirestore\", fs());\n    },\n\n    async getMessages({\n      commit\n    }) {\n      if (this.state.myFirestore) {\n        const db = getFirestore();\n        const q = query(collection(db, \"mensajes\"), orderBy(\"date\"));\n        onSnapshot(q, querySnapshot => {\n          const mensajes = [];\n          this.mensajes = [];\n          querySnapshot.forEach(doc => {\n            mensajes.push({\n              id: doc.id,\n              data: doc.data()\n            });\n          });\n          this.mensajes = mensajes;\n          this.newMessage = \"\";\n        });\n        commit('getTours', resultTours);\n      }\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","onSnapshot","query","collection","state","myFirestore","mensajes","getters","mutations","instanceFirestore","fs","actions","commit","getMessages","db","getFirestore","q","orderBy","querySnapshot","forEach","doc","push","id","data","newMessage","resultTours","modules"],"sources":["/Users/pibustamante/Documents/repositorios/vue-avanzado/pruerba/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport {\n  onSnapshot,\n  query,\n  collection,\n} from 'firebase/firestore'\n\nexport default createStore({\n  state: {\n    myFirestore: null,\n    mensajes:null,\n  },\n  getters: {\n\n  },\n  mutations: {\n    instanceFirestore(state, fs) {\n      state.myFirestore = fs\n    },\n  },\n  actions: {\n    async instanceFirestore({ commit }, fs) {\n      commit(\"instanceFirestore\", fs())\n    },\n    async getMessages({commit}) {\n      if (this.state.myFirestore)  {\n        const db = getFirestore();\n        const q = query(collection(db, \"mensajes\"), orderBy(\"date\"));\n        onSnapshot(q, (querySnapshot) => {\n          const mensajes = [];\n          this.mensajes = [];\n          querySnapshot.forEach((doc) => {\n            mensajes.push({ id: doc.id, data: doc.data() });\n          });\n          this.mensajes = mensajes;\n          this.newMessage = \"\";\n        });\n        commit('getTours', resultTours)\n      }\n    },\n\n    \n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,eAAeH,WAAW,CAAC;EACzBI,KAAK,EAAE;IACLC,WAAW,EAAE,IADR;IAELC,QAAQ,EAAC;EAFJ,CADkB;EAKzBC,OAAO,EAAE,EALgB;EAQzBC,SAAS,EAAE;IACTC,iBAAiB,CAACL,KAAD,EAAQM,EAAR,EAAY;MAC3BN,KAAK,CAACC,WAAN,GAAoBK,EAApB;IACD;;EAHQ,CARc;EAazBC,OAAO,EAAE;IACP,MAAMF,iBAAN,CAAwB;MAAEG;IAAF,CAAxB,EAAoCF,EAApC,EAAwC;MACtCE,MAAM,CAAC,mBAAD,EAAsBF,EAAE,EAAxB,CAAN;IACD,CAHM;;IAIP,MAAMG,WAAN,CAAkB;MAACD;IAAD,CAAlB,EAA4B;MAC1B,IAAI,KAAKR,KAAL,CAAWC,WAAf,EAA6B;QAC3B,MAAMS,EAAE,GAAGC,YAAY,EAAvB;QACA,MAAMC,CAAC,GAAGd,KAAK,CAACC,UAAU,CAACW,EAAD,EAAK,UAAL,CAAX,EAA6BG,OAAO,CAAC,MAAD,CAApC,CAAf;QACAhB,UAAU,CAACe,CAAD,EAAKE,aAAD,IAAmB;UAC/B,MAAMZ,QAAQ,GAAG,EAAjB;UACA,KAAKA,QAAL,GAAgB,EAAhB;UACAY,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;YAC7Bd,QAAQ,CAACe,IAAT,CAAc;cAAEC,EAAE,EAAEF,GAAG,CAACE,EAAV;cAAcC,IAAI,EAAEH,GAAG,CAACG,IAAJ;YAApB,CAAd;UACD,CAFD;UAGA,KAAKjB,QAAL,GAAgBA,QAAhB;UACA,KAAKkB,UAAL,GAAkB,EAAlB;QACD,CARS,CAAV;QASAZ,MAAM,CAAC,UAAD,EAAaa,WAAb,CAAN;MACD;IACF;;EAnBM,CAbgB;EAoCzBC,OAAO,EAAE;AApCgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}