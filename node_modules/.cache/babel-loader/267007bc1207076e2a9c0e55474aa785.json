{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withKeys as _withKeys } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content bg-purple\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"grid-content_up bg-purple-light\"\n};\nconst _hoisted_3 = {\n  class: \"mensaje_burbuja\"\n};\nconst _hoisted_4 = {\n  class: \"mensaje_controls\"\n};\nconst _hoisted_5 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Cancel\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Confirm\");\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content bg-purple\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content bg-purple\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = {\n  class: \"grid-content_down bg-purple-light\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content bg-purple\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Logo superior cabezera \"), _createVNode($setup[\"TitleLogo\"]), _createCommentVNode(\" Grilla superior \"), _createVNode(_component_el_row, {\n    gutter: 10\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" Columna invisible para centrar responsivo \"), _createVNode(_component_el_col, {\n      xs: 0,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_hoisted_1]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" Columna que contiene los mensajes \"), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 20,\n      md: 16,\n      lg: 12,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" elemento que encapsula los mensajes para agregar un scrollbar\"), _createVNode(_component_el_scrollbar, {\n        always: \"\",\n        onScroll: $event => 200,\n        height: \"600px\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" iterador de los mensajes de firebase \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mensajes, value => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            class: \"mensaje\",\n            key: value.id\n          }, [_createElementVNode(\"li\", null, [_createCommentVNode(\" burbuja de chat \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\"controles editar y eliminar invisibles si no son hover \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" boton de editar \"), _createVNode(_component_el_button, {\n            onClick: $event => ($setup.dialogFormVisible = true, $options.setEditMessage(value.data.texto)),\n            type: \"primary\",\n            icon: $setup.Edit,\n            circle: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"onClick\", \"icon\"]), _createCommentVNode(\" modal del boton editar \"), _createVNode(_component_el_dialog, {\n            modelValue: $setup.dialogFormVisible,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogFormVisible = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.editMessage,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editMessage = $event),\n              autocomplete: \"off\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"]), _createElementVNode(\"span\", _hoisted_5, [_createCommentVNode(\" boton cancelar edicion \"), _createVNode(_component_el_button, {\n              onClick: _cache[1] || (_cache[1] = $event => $setup.dialogFormVisible = false)\n            }, {\n              default: _withCtx(() => [_hoisted_6]),\n              _: 1\n              /* STABLE */\n\n            }), _createCommentVNode(\" boton que gatilla la edicion \"), _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $event => ($setup.dialogFormVisible = false, $options.editFireStoreMessage(value.id, {\n                texto: $data.editMessage,\n                fecha: value.data.date\n              }))\n            }, {\n              default: _withCtx(() => [_hoisted_7]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"])])]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"modelValue\"]), _createCommentVNode(\" boton de eliminar \"), _createVNode(_component_el_button, {\n            onClick: $event => $options.delMessage(value.id),\n            type: \"danger\",\n            icon: $setup.Delete,\n            circle: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"onClick\", \"icon\"])]), _createCommentVNode(\" mensaje de la burbuja \"), _createElementVNode(\"a\", null, _toDisplayString(value.data.texto), 1\n          /* TEXT */\n          )])])]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\"columna invisible usada para centrar\"), _createVNode(_component_el_col, {\n      xs: 0,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), _createCommentVNode(\"grilla inferior \"), _createVNode(_component_el_row, {\n    gutter: 10\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\"columna invisible usada para centrar\"), _createVNode(_component_el_col, {\n      xs: 0,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\"columna que contiene el cuadro de texto y el boton enviar\"), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 20,\n      md: 16,\n      lg: 12,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" grilla interior usada para ordenar elementos de caja de texto y boton enviar\"), _createVNode(_component_el_row, {\n        gutter: 10\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\"cajita de texto\"), _createVNode(_component_el_col, {\n          xs: 21,\n          sm: 22,\n          md: 22,\n          lg: 22,\n          xl: 22\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            onKeyup: _cache[3] || (_cache[3] = _withKeys($event => $options.addMessage({\n              texto: $data.newMessage,\n              date: Date.now()\n            }), [\"enter\"])),\n            modelValue: $data.newMessage,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newMessage = $event),\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\"boton enviar\"), _createVNode(_component_el_col, {\n          xs: 3,\n          sm: 2,\n          md: 2,\n          lg: 2,\n          xl: 2\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            onClick: _cache[5] || (_cache[5] = $event => $options.addMessage({\n              texto: $data.newMessage,\n              date: Date.now()\n            })),\n            type: \"primary\",\n            icon: $setup.Message\n          }, null, 8\n          /* PROPS */\n          , [\"icon\"])]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\"columna invisible usada para centrar\"), _createVNode(_component_el_col, {\n      xs: 0,\n      sm: 2,\n      md: 4,\n      lg: 6,\n      xl: 8\n    }, {\n      default: _withCtx(() => [_hoisted_11]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_createCommentVNode","_createVNode","$setup","_component_el_row","gutter","_component_el_col","xs","sm","md","lg","xl","_hoisted_1","_component_el_scrollbar","always","onScroll","height","_createElementBlock","_Fragment","_renderList","$data","value","key","id","_component_el_button","onClick","$options","data","texto","type","icon","circle","_component_el_dialog","$event","_component_el_input","autocomplete","fecha","date","_toDisplayString","_hoisted_8","_hoisted_9","onKeyup","Date","now","_hoisted_11"],"sourceRoot":"","sources":["/Users/pibustamante/Documents/repositorios/vue-avanzado/desafio_2/src/App.vue"],"sourcesContent":["<template>\n  <!-- Logo superior cabezera -->\n  <TitleLogo />\n\n  <!-- Grilla superior -->\n\n  <el-row :gutter=\"10\">\n    <!-- Columna invisible para centrar responsivo -->\n\n    <el-col :xs=\"0\" :sm=\"2\" :md=\"4\" :lg=\"6\" :xl=\"8\"\n      ><div class=\"grid-content bg-purple\"></div\n    ></el-col>\n\n    <!-- Columna que contiene los mensajes -->\n\n    <el-col :xs=\"24\" :sm=\"20\" :md=\"16\" :lg=\"12\" :xl=\"8\">\n      <div class=\"grid-content_up bg-purple-light\">\n        <!-- elemento que encapsula los mensajes para agregar un scrollbar-->\n        <el-scrollbar always @scroll=\"200\" height=\"600px\">\n          <!-- iterador de los mensajes de firebase -->\n          <div class=\"mensaje\" v-for=\"value in mensajes\" :key=\"value.id\">\n            <li>\n              <!-- burbuja de chat -->\n\n              <div class=\"mensaje_burbuja\">\n                <!--controles editar y eliminar invisibles si no son hover -->\n                <div class=\"mensaje_controls\">\n                  <!-- boton de editar -->\n                  <el-button\n                    @click=\"\n                      (dialogFormVisible = true),\n                        setEditMessage(value.data.texto)\n                    \"\n                    type=\"primary\"\n                    :icon=\"Edit\"\n                    circle\n                  />\n                  <!-- modal del boton editar -->\n                  <el-dialog v-model=\"dialogFormVisible\">\n                    <el-input v-model=\"editMessage\" autocomplete=\"off\" />\n                    <span class=\"dialog-footer\">\n                      <!-- boton cancelar edicion -->\n                      <el-button @click=\"dialogFormVisible = false\"\n                        >Cancel</el-button\n                      >\n                      <!-- boton que gatilla la edicion -->\n                      <el-button\n                        type=\"primary\"\n                        @click=\"\n                          (dialogFormVisible = false),\n                            editFireStoreMessage(value.id, {\n                              texto: editMessage, fecha: value.data.date\n                            })\n                        \"\n                        >Confirm</el-button\n                      >\n                    </span>\n                  </el-dialog>\n\n                  <!-- boton de eliminar -->\n                  <el-button\n                    @click=\"delMessage(value.id)\"\n                    type=\"danger\"\n                    :icon=\"Delete\"\n                    circle\n                  />\n                </div>\n                <!-- mensaje de la burbuja -->\n                <a>{{ value.data.texto }}</a>\n              </div>\n            </li>\n          </div>\n        </el-scrollbar>\n      </div>\n    </el-col>\n    <!--columna invisible usada para centrar-->\n    <el-col :xs=\"0\" :sm=\"2\" :md=\"4\" :lg=\"6\" :xl=\"8\"\n      ><div class=\"grid-content bg-purple\"\n    /></el-col>\n  </el-row>\n\n  <!--grilla inferior -->\n  <el-row :gutter=\"10\">\n    <!--columna invisible usada para centrar-->\n    <el-col :xs=\"0\" :sm=\"2\" :md=\"4\" :lg=\"6\" :xl=\"8\"\n      ><div class=\"grid-content bg-purple\"></div\n    ></el-col>\n\n    <!--columna que contiene el cuadro de texto y el boton enviar-->\n    <el-col :xs=\"24\" :sm=\"20\" :md=\"16\" :lg=\"12\" :xl=\"8\">\n      <div class=\"grid-content_down bg-purple-light\">\n        <!-- grilla interior usada para ordenar elementos de caja de texto y boton enviar-->\n        <el-row :gutter=\"10\">\n          <!--cajita de texto-->\n          <el-col :xs=\"21\" :sm=\"22\" :md=\"22\" :lg=\"22\" :xl=\"22\"\n            ><el-input\n              v-on:keyup.enter=\"\n                addMessage({ texto: newMessage, date: Date.now() })\n              \"\n              v-model=\"newMessage\"\n              autocomplete=\"off\"\n          /></el-col>\n          <!--boton enviar-->\n          <el-col :xs=\"3\" :sm=\"2\" :md=\"2\" :lg=\"2\" :xl=\"2\">\n            <el-button\n              @click=\"addMessage({ texto: newMessage, date: Date.now() })\"\n              type=\"primary\"\n              :icon=\"Message\"\n            />\n          </el-col>\n        </el-row>\n      </div>\n    </el-col>\n\n    <!--columna invisible usada para centrar-->\n\n    <el-col :xs=\"0\" :sm=\"2\" :md=\"4\" :lg=\"6\" :xl=\"8\"\n      ><div class=\"grid-content bg-purple\"\n    /></el-col>\n  </el-row>\n</template>\n\n\n<script  setup>\n//Importación de librerias de firebase\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  query,\n  deleteDoc,\n  doc,\n  addDoc,\n  setDoc,\n  orderBy,\n} from \"firebase/firestore\";\n\n//importacion de complementos adicionales de element plus\nimport { ElMessage } from \"element-plus\";\n\n//importacion de iconos de element plis\nimport { Delete, Edit, Message } from \"@element-plus/icons-vue\";\n\n//importacion de referenciacion de vue necesaria para hacer compatible elementos de element plus vue2 con vue3\n//en este caso solo se usa para el dialog (modal de edicion)\n\nimport { ref } from \"vue\";\nconst dialogFormVisible = ref(false);\n</script>\n\n<script>\n//importo el componente donde tengo el logo y el nombre de la app\nimport TitleLogo from \"./components/TitleLogo.vue\";\n\nexport default {\n  name: \"App\",\n  components: { TitleLogo },\n  data() {\n    return {\n      mensajes: [],\n      newMessage: \"\",\n      editMessage: \"\",\n    };\n  },\n  methods: {\n    //obtencion de mensajes ordenados de forma ascendiente dependiendo de la fecha ingresada\n    async getMessajes() {\n      const db = getFirestore();\n      const q = query(collection(db, \"mensajes\"), orderBy(\"date\"));\n      onSnapshot(q, (querySnapshot) => {\n        const mensajes = [];\n        this.mensajes = [];\n        querySnapshot.forEach((doc) => {\n          mensajes.push({ id: doc.id, data: doc.data() });\n        });\n        this.mensajes = mensajes;\n        this.newMessage = \"\";\n      });\n    },\n\n    //añadir nuevos elementos a firestore siempre cuando algo sea escrito en el mensaje (en este caso no valide los trim son las 2:14 tengo sueño)\n    async addMessage(objeto) {\n      if (this.newMessage != \"\") {\n        const db = getFirestore();\n        await addDoc(collection(db, \"mensajes\"), objeto);\n        ElMessage({ message: \"Mensaje enviado\", type: \"success\" });\n      } else {\n        ElMessage({\n          message: \"Mensaje no puede estar en blanco\",\n          type: \"error\",\n        });\n      }\n    },\n\n    //eliminar elemenntos de firestore utilizando el identificador iterado\n    async delMessage(Identifier) {\n      const db = getFirestore();\n      await deleteDoc(doc(db, \"mensajes\", Identifier));\n      ElMessage({ message: \"Mensaje eliminado\", type: \"success\" });\n    },\n\n    //metodo que sirve para asignar de forma dinamica el contenido del cuadro de texto de edición con el mensaje iterado seleccionado\n    setEditMessage(Message) {\n      this.editMessage = Message;\n    },\n\n    //editar elementos de firestore utilizando el identificador iterado\n    editFireStoreMessage(Identifier, objeto) {\n      const db = getFirestore();\n      setDoc(doc(db, \"mensajes\", Identifier), objeto);\n    },\n  },\n  mounted() {\n    //carga inicial de los mensajes de firestore\n    this.getMessajes();\n  },\n};\n</script>\n\n<style >\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n\n.el-col {\n  border-radius: 4px;\n}\n\n.bg-purple {\n}\n.bg-purple-light {\n  background: #e5e9f2;\n}\n.grid-content {\n  border-radius: 4px 4px 0% 0%;\n  min-height: 36px;\n}\n\n.grid-content_up {\n  border-radius: 4px 4px 0% 0%;\n  min-height: 36px;\n}\n\n.grid-content_down {\n  border-radius: 0px 0px 4px 4px;\n  min-height: 36px;\n  padding: 10px;\n}\n\n.mensaje {\n  padding: 10px;\n}\n\nli {\n  border-radius: 10px;\n  list-style-type: none;\n  display: flex;\n  justify-content: end;\n}\n\n.mensaje_burbuja {\n  background-color: cornflowerblue;\n  color: white;\n  padding-right: 20px;\n  padding: 10px;\n  border-radius: 10px;\n  position: relative;\n  display: inline-block;\n  min-width: 200px;\n  text-align: right;\n}\n\n.mensaje_burbuja:hover {\n  background-color: rgb(58, 111, 211);\n}\n\n.mensaje_burbuja:hover > .mensaje_controls {\n  display: flex;\n}\n.mensaje_controls {\n  display: none;\n  margin-left: -10px;\n  margin-top: -10px;\n  padding: 0px;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n  justify-content: center;\n  align-items: center;\n}\n\n.mensaje_burbuja_eliminar {\n  width: 20px;\n  height: 20px;\n  background-color: rgb(255, 152, 152);\n  border-radius: 100%;\n  float: right;\n}\n\n.mensaje_burbuja_editar {\n  width: 20px;\n  height: 20px;\n  background-color: rgb(255, 227, 137);\n  border-radius: 100%;\n  float: right;\n}\n\nli:hover > .mensaje_burbuja_editar {\n  display: block;\n}\n</style>"]},"metadata":{},"sourceType":"module"}