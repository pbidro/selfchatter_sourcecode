{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mensajes, value => {\n    return _openBlock(), _createElementBlock(\"ol\", {\n      key: value.id\n    }, [_createElementVNode(\"li\", null, _toDisplayString(value), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;2BACIA,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFiBC,cAEjB,EAFOC,KAAkB,IAAb;yBAAjBJ,oBAEK,IAFL,EAEK;AAF4BK,SAAG,EAAED,KAAK,CAACE;AAEvC,KAFL,GACEC,oBAAoB,IAApB,EAAoB,IAApB,EAAoBC,iBAAZJ,KAAY,CAApB,EAAa;AAAA;AAAb,MADF;GAEK,CAFL;;AAAA","names":["_createElementBlock","_Fragment","_renderList","$data","value","key","id","_createElementVNode","_toDisplayString"],"sourceRoot":"","sources":["/Users/pibustamante/Documents/repositorios/vue-avanzado/desafio_2/src/App.vue"],"sourcesContent":["<template>\n    <ol v-for=\"(value) in mensajes\" :key=\"value.id\">\n      <li > {{value}}</li>\n    </ol>\n</template>\n\n\n<script  setup>\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  query,\n} from \"firebase/firestore\";\n\nimport {\n  Message,\n  Star,\n  Menu as IconMenu,\n  Setting,\n} from \"@element-plus/icons-vue\";\n\nimport { ref } from \"vue\";\n\nconst handleOpen = (key, keyPath) => {};\nconst handleClose = (key, keyPath) => {};\n\nconst menuActive = ref(false);\n</script>\n\n<script>\nexport default {\n  name: \"App\",\n  components: {\n  },\n  data() {\n    return { \n      mensaje: { texto: \"\"},\n      mensajes: [],\n    };\n  },\n  methods: {\n    async getMessajes() {\n      const db = getFirestore();\n      const q = query(collection(db, \"mensajes\"));\n      onSnapshot(q, (querySnapshot) => {\n        const mensajes = [];\n        this.mensajes = [];\n        querySnapshot.forEach((doc) => {\n          mensajes.push({ id: doc.id, data: doc.data() });\n        });\n        this.mensajes = mensajes;\n      });\n    },\n  },\n  mounted() {\n    this.getMessajes();\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}